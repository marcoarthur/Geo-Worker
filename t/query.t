use strict;
use Test::More;
use Test::Moose;
use Test::Fatal;
use Data::Dumper;
use Geo::Overpass::Query;

for (qw{ clauses }) {
    has_attribute_ok( 'Geo::Overpass::Query', $_ );
}

my $good_clause = << 'EOF';
/*
This has been generated by the overpass-turbo wizard.
The original search was:
“tourism=museum”
*/
[out:json][timeout:25];
// gather results
(
	  // query part for: “tourism=museum”
	    node["tourism"="museum"]({{bbox}});
		  way["tourism"="museum"]({{bbox}});
		    relation["tourism"="museum"]({{bbox}});
			);
			// print results
			out body;
			>;
			out skel qt;
EOF

my @good_args = ( { clauses => [$good_clause] }, { clauses => [] } );
my @bad_args  = ( { clauses => {} },             { clauses => 'Bad Args' } );

for (@good_args) {
    isa_ok( my $q = Geo::Overpass::Query->new($_),
        'Geo::Overpass::Query', 'New Geo::Overpass::Query object' );

}

for (@bad_args) {
    like(
        exception { my $q = Geo::Overpass::Query->new($_) },
        qr/Attribute \(clauses\)/,
        'Error bad args'
    );
}

done_testing;
